#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\use_default_options true
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Structure from motion
\end_layout

\begin_layout Standard
The premise of this technique relies on the computer's ability to test many
 
\begin_inset Quotes eld
\end_inset

theories
\begin_inset Quotes erd
\end_inset

 in a brief span of time.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/multiplane.png
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:multiplane"

\end_inset

Possible locations of a 3D point given fringe locations and its position
 in the camera view.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
For a given series of fringes, camera/projector relationship, rotary stage
 position 
\begin_inset Formula $\rho$
\end_inset

, and selected illuminated point 
\begin_inset Formula $\left(u,\, v\right)$
\end_inset

, there is a number 
\begin_inset Formula $N$
\end_inset

 of possible points 
\begin_inset Formula $X$
\end_inset

 which corresponds to the number of fringes being projected.
 Each of these possibilities is calculated and stored; it can be recalled
 by a function 
\begin_inset Formula $X\left(\rho,\, u,\, v,\, n\right)$
\end_inset

 of the rotary stage position 
\begin_inset Formula $\rho$
\end_inset

 when the video frame was taken, the image coordinates 
\begin_inset Formula $\left(u,\, v\right)$
\end_inset

, and the predicted fringe index 
\begin_inset Formula $n$
\end_inset

.
 It is a difficult problem to calculate from a single frame which fringe
 a pixel 
\begin_inset Quotes eld
\end_inset

belongs
\begin_inset Quotes erd
\end_inset

 to.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:multiplane"

\end_inset

 demonstrates the geometry.
 Of course, given initial conditions such as rough diameter and height of
 the object, it is possible to 
\begin_inset Quotes eld
\end_inset

throw out
\begin_inset Quotes erd
\end_inset

 points with too great an 
\begin_inset Formula $r$
\end_inset

 or 
\begin_inset Formula $z$
\end_inset

.
 It is also possible to rule out possibilities by the fringes visible in
 the video frame.
 For example, if an illuminated pixel has 8 fringes to the left and 12 to
 the right, we can be certain that 
\begin_inset Formula $8<n<N-12$
\end_inset

.
\end_layout

\begin_layout Standard
The computer maintains a list of each point in cylindrical coordinates,
 storing 
\begin_inset Formula $\left(r,\,\theta,\, z\right)$
\end_inset

 for every potential match along with an ID.
 This ID 
\begin_inset Formula $i$
\end_inset

 is unique to each potential point 
\begin_inset Formula $X$
\end_inset

.
 As the object rotates, the given point 
\begin_inset Formula $M$
\end_inset

 on the object will come into view again, this time illuminated by a different
 fringe.
 A new set is constructed.
 Again, this set may be simplified by removing impossible points.
\end_layout

\begin_layout Standard
Each frame, characterized by its stage rotation 
\begin_inset Formula $\rho$
\end_inset

, will generate a point cloud 
\begin_inset Formula $X\left(u,\, v,\, n\right)$
\end_inset

 which is a set of points whose members may be uniquely identified by their
 image position 
\begin_inset Formula $\left(u,\, v\right)$
\end_inset

 and their guessed fringe index 
\begin_inset Formula $n$
\end_inset

.
 These potential points will be added to the general cloud of potential
 points 
\begin_inset Formula $X$
\end_inset

.
 This will contain the actual measurements, but these will be buried since
 only 1 in 
\begin_inset Formula $N$
\end_inset

 points will represent the object.
 
\end_layout

\begin_layout Standard
To sort these out, we check each point 
\begin_inset Formula $\left(r,\,\theta,\, z\right)$
\end_inset

 in the cloud.
 Each of these points will be represented multiple times, but each representatio
n will have a fixed relationship between 
\begin_inset Formula $\rho$
\end_inset

 and 
\begin_inset Formula $n$
\end_inset

.
 In other words, given a point 
\begin_inset Formula $\left(r,\,\theta,\, z\right)$
\end_inset

 on the object and the stage rotation 
\begin_inset Formula $\rho$
\end_inset

, we can calculate the expected fringe index 
\begin_inset Formula $n$
\end_inset

; likewise, given a fringe index we can calculate the necessary stage rotation.
 Each of the points in the potential cloud will therefore be characterized
 by five coordinates 
\begin_inset Formula $\left(r,\,\theta,\, z,\,\rho,\, n\right)$
\end_inset

.
\end_layout

\end_body
\end_document
